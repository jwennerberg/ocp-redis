apiVersion: v1
kind: Template
labels:
  template: redis-bootstrap-template
message: The redis-bootstrap DeploymentConfig can be deleted when the cluster has been scaled up using the redis-cluster template.
metadata:
  annotations:
    description: ''
    tags: redis
  creationTimestamp: null
  name: redis-bootstrap
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: sentinel
      role: service
    name: redis-sentinel
  spec:
    ports:
      - port: 26379
        targetPort: 26379
    selector:
      redis-sentinel: "true"
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    name: ${REDIS_SERVICE_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${REDIS_SERVICE_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${REDIS_SERVICE_NAME}:latest
    postCommit: {}
    resources: {}
    source:
      git:
        ref: master
        uri: ${SOURCE_REPOSITORY_URL}
      secrets: []
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: DockerImage
          name: docker.io/redis:latest
      type: Docker
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${REDIS_SERVICE_NAME}-bootstrap
  spec:
    replicas: 1
    selector:
      name: ${REDIS_SERVICE_NAME}-bootstrap
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${REDIS_SERVICE_NAME}-bootstrap
          redis-sentinel: "true"
          role: master
      spec:
        containers:
        - capabilities: {}
          env:
          - name: MASTER
            value: "true"
          image: ' '
          name: master
          ports:
          - containerPort: 6379
            protocol: TCP
          resources:
            limits:
              cpu: "0.1"
          volumeMounts:
          - mountPath: /redis-master-data
            name: data
        - capabilities: {}
          env:
          - name: SENTINEL
            value: "true"
          image: ' '
          name: sentinel
          ports:
          - containerPort: 26379
            protocol: TCP
        restartPolicy: Always
        volumes:
        - emptyDir:
          name: data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - master
        from:
          kind: ImageStreamTag
          name: ${REDIS_SERVICE_NAME}:latest
        lastTriggeredImage: ""
      type: ImageChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - sentinel
        from:
          kind: ImageStreamTag
          name: ${REDIS_SERVICE_NAME}:latest
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${REDIS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${REDIS_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${REDIS_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          image: ' '
          name: ${REDIS_SERVICE_NAME}
          ports:
          - containerPort: 6379
            protocol: TCP
          resources:
            limits:
              cpu: "0.1"
          volumeMounts:
          - mountPath: /redis-master-data
            name: data
        restartPolicy: Always
        volumes:
        - emptyDir:
          name: data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${REDIS_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${REDIS_SERVICE_NAME}:latest
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: ${REDIS_SERVICE_NAME}-sentinel
  spec:
    replicas: 1
    selector:
      name: ${REDIS_SERVICE_NAME}-sentinel
      redis-sentinel: "true"
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${REDIS_SERVICE_NAME}-sentinel
          redis-sentinel: "true"
          role: sentinel
      spec:
        containers:
        - capabilities: {}
          env:
          - name: SENTINEL
            value: "true"
          image: ' '
          name: sentinel
          ports:
          - containerPort: 26379
            protocol: TCP
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - sentinel
        from:
          kind: ImageStreamTag
          name: ${REDIS_SERVICE_NAME}:latest
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}
parameters:
- description: The name of the Redis bootstrap service
  displayName: Redis Service Name
  name: REDIS_SERVICE_NAME
  required: true
  value: redis
- description: The URL of the Git repository with the Dockerfile
  name: SOURCE_REPOSITORY_URL
  required: true
  value: http://github.com/jwennerberg/ocp-redis-sentinel.git

